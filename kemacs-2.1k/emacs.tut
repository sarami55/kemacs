		日本語 MicroEMACS(kemacs) 入門編

これは、kemacs の入門編です。内容についての意見等は、さねをまで、お寄せ
下さい。なお、この中で「マニュアル」として参照されている文書は、
emacs.mss に、Scribe への入力のかたちで記述されています。フォーマット
されたかたちのものはありません。

注意： この入門編は、「習うより慣れろ」をモットーに作成されています。行
の右端の ">>" は、その時何をすべきかを指示しています。

kemacs のコマンドを入力するときには、一般的にコントロール・キー（キー・
トップに、 CTRL あるいは、CTL と書いてある）やメタ・キー（普通、エスケー
プ・キーを使う）が使われます。そこで、CONTROL とか META とかいちいち書
く代わりに、次のような記方を使うことにします：

   ^<文字>	コントロール・キーを押したまま、<文字>キーを押します。
		例えば、^F は、コントロール・キーを押しながら F のキー
		を押すことを意味します。

>>　それでは、^V （View Next Screen; 次の画面を見る）をタイプしてみて下さい。
　　次の画面に進むことができます。
　　いいですか：コントロール・キーを押しながら、V を押すのですよ。

   ESC-<文字>	エスケープ・キーを押してから離し、それから<文字>キーを
		押します。注意：<文字>は、大文字でも小文字でもコマンド
		としては同じ意味になります。

重要です：エディタ を終了させたい時は、^X^C をタイプします。

さて、これからは、一画面分読み終えたら、^V を入力して行って下さい。

前の画面と次の画面とでは、表示される内容に何行文かの重なりがあります。
これは、表示されている内容が連続していることがすぐ判るようにするためで
す。

まずは、ファイルの中を移動して行く方法を知る必要があります。^V によって
先に進むことはもう判りました。元に戻るには、^Z をタイプします。

>>  ^Z と ^V を使って、前後に移動することを何回か試してみなさい。


要約
----
ファイルを画面毎に見て行くには、次のコマンドを使います。

     ^V       前に一画面分進む
     ^Z       後ろに一画面分戻る
     ESC-^L   画面を書き直す。このとき、元カーソルのあった行が画面の中
	　　　央にくるようにする

>>  今カーソルがどこにあるか、その近くにどんなテキストが書かれているか
    を覚えなさい。ESC-^L をタイプし、カーソルがどこに移動したか、その
    近くのテキストはどうなったかを調べてみなさい。


基本的なカーソルの制御
----------------------

画面毎の移動はできるようになりました。今度は、画面の中で、特定の場所に
移動するための方法を憶えましょう。これにはいくつかのやり方があります。
一つの方法（一番いいと言うわけではありませんが、少なくとも、一番基本的
です）は、上(previous)下(next)次(forward)前(backward)に移動するコマンド
を使うことです。これらのコマンドはそれぞれ、^P,^N,^F,^B に割り当てられ
ており、現在の場所から新しい場所にカーソルを移動させます。図で書けば、


                      　　　 上の行，^P
                                  :
                                  :
       前の文字，^B .... 現在のカーソル位置 .... 次の文字，^F
                                  :
                                  :
                       　　　 次の行，^N

これらは、それぞれ、Previous, Next, Backward, Forward の頭文字になって
いるので、憶えやすいでしょう。これらは、基本的なカーソル移動コマンドで
あり、いつでも使うものです。だから、ここで憶えておいて損はありません。

>>  ^N を何回かタイプし、この行までカーソルを移動させなさい。

>>  ^F を使って行の中ほどに移動し、^P で何行か上に移動してみなさい。
    カーソルの位置の変化に注意しなさい。

>>  行の先頭で ^B をタイプしてみなさい。カーソルはどこに移動しますか？
    さらにもう少し ^B をタイプし、今度は ^F で行末の方に戻りなさい。カー
    ソルが行末を越えるとどうなりますか？

画面の先頭や末尾を越えてカーソルを移動させようとすると、その方向にある
テキストが移動して来て、カーソルは常に画面内にあるようにされます。

>>  ^N を使って、カーソルを画面の下端より下に移動させてみなさい。何が
    起こりましたか？カーソルの位置はどう変りましたか？

一文字単位の移動ではまどろっこしいと思うなら、単語単位で移動することも
できます。ESC-F で一単語分先に進み、ESC-B で一単語分前に戻ります。

注意：	日本語については、単語の切れ目を認識することができません。従っ
	て、半角文字や改行、タブが現れるまでスキップすることになります。

>>  ESC-F や ESC-B を何回かタイプしてみなさい。^F や ^B と併用してみな
    さい。

^F や ^B に対する、ESC-F や ESC-B の類似性に注目しましょう。多くの場合、
メタ・キャラクタは文書関係の処理に使われ、一方コントロール・キャラクタ
はそれよりももっと基本的な対象（文字とか行とか）に対する操作に使われま
す。

^A と ^E も知っていて便利なコマンドです。^A はカーソルを行の先頭に移動
させ、^E は行の末尾に移動させます。

>>  ^A を２回、それから ^E を２回入力してみなさい。これらのコマンドを
    ２回以上繰返しても、カーソルはそれ以上移動しないことに注意。

あと二つ、簡単なカーソル移動コマンドがあります。ファイルの先頭に移動する ESC-< 
と、ファイルの末尾に移動する ESC-> です。< や > をタイプするときには、
シフトキーを押すのを忘れないように。さもないと、, や . が入力されてしま
います。

テキスト中でカーソルの存在する位置を「ポイント」と呼びます。言いかえれ
ば、カーソルは、テキストのどこにポイントがあるかをスクリーン上で示して
いるのです。

以下に単純な移動操作について要約します。このなかには、単語や行単位での
移動コマンドも含まれています：

     ^F        一文字先に進む
     ^B        一文字後に戻る

     ESC-F     一単語先に進む
     ESC-B     一単語後に戻る

     ^N        次の行に移動
     ^P        前の行に移動

     ESC-N     段落の終わりに移動
     ESC-P     段落の先頭に移動

     ^A        行の最初に移動
     ^E        行の最後に移動

     ESC-<     ファイルの最初に移動
     ESC->     ファイルの最後に移動

>>  各々のコマンドを試してみなさい。これらのコマンドは、最もしばしば使
    われるものです。最後の二つでは、この場所とは離れたところに移動する
    ので、 ^V や ^Z を使ってここに戻って来るようにしなさい。

エディタの他のコマンドと同様に、これらのコマンドには、繰り返しの回数を
指定する引数 を与えることができます。そのためには、コマンドを入力する
前に、メタ（エスケープ）・キーに続いて繰り返す回数を入力します。特別な
場合として、^U を ESC-4 の代わりに使うことができます。

例えば、ESC-8 ^F とすると、８文字分先に移動します。

>>  ^N あるいは ^P に適当な引数を指定して、一回の移動でなるべくこの行
    の近くに来るようにしてみなさい。

このことは ^V や ^Z についても同様です。この場合、指定された回数分の画
面を移動することになります。

>>  ESC-3 ^V と入力してみなさい。

元に戻るには、^Z を使えばよいのです。


中止コマンド
------------

^G というコマンドで、入力を必要とするようなコマンドを中止することができ
ます。例えば、引数を入力している途中や、２つ以上のキー入力を必要とする
コマンドを入力している最中に、それをやめたくなったら、^G を使えば良いの
です。

>>  ESC-100 をタイプして引数を１００に設定し、^G をタイプしなさい。そ
    のあとで ^F をタイプしてみなさい。何文字移動しましたか？もし間違っ
    て ESC を入力してしまった時も、^G を入力すれば取り消せます。


エラー
------

時には、エディタで許されていない操作をしてしまうことがあります。例えば、
コマンドの定義されていないコントロール・キーを入力してしまった時には、
エディタはベルを鳴らし、さらに、画面の一番下に、何が悪かったかを表示し
ます。

エディタのバージョンによっては、この入門編に書かれていることを実行でき
ない場合があり得ます。その様な場合には、エラーメッセージが表示されます
から、何かカーソル移動キーを押して、その次の部分に進んで下さい。


注意：	この後の章のいくつかの練習では、この文書を変更できるようにオプ
	ションを設定するものがあります。しかし、「間違って変な変更をし
	てしまったらどうしよう」などの心配は無用です。この文書は、オリ
	ジナルのコピーですから、それを元の文書にセーブし直さない限り大
	丈夫なのです。

カーソル・キー
--------------

カーソル・キーのあるキーボードでは、これをスクリーン上での移動のために
使用することができます。カーソルキーのコマンドへの割り当ては以下のよう
になっています：

     Cursor-Right    ^F        一文字分進む
     Cursor-Left     ^B        一文字分戻る

     Cursor-Down     ^N        次の行へ
     Cursor-Up       ^P        前の行へ

     Home            ESC-O     次のウィンドウへ


>>  カーソル・キーを使う練習をしてみなさい


モード・ライン
--------------

画面の一番下の行（ファンクション・キーが表示される端末では、その上の行）
は、「コミュニケーション・ライン」と呼ばれます。この行を使って、エディ
タは対話的なやり取りを行います。エディタが情報を要求するやり方（例えば、
探索を開始するときなど）については、後ほど説明することにします。エディ
タからの情報がこの行に表示されることもあります。

>>  ^X= と入力してみなさい。コミュニケーション・ラインには何が表示され
    ますか？ 表示されたものの意味については、ここでは気にする必要はあ
    りません。これは、エディタが現在編集中のファイルについてのより詳し
    い情報を示すやり方の一つの例です。


コミュニケーション・ラインのすぐ上の行は、「モード・ライン」と呼ばれま
す。モード・ラインには次のような表示が行われます。

=* 日本語 uEMACS 2.1 () == emacs.tut File: emacs.tut ==JIS-OLD-ROMAJI==========

この行によって、多くの有用な情報が得られます。

  -  アステリスク（星印）は、ファイルが変更されていることを示します。
    ファイルを読み込んだり、書き出したりした直後には、星印は表示されま
    せん。

  -  括弧の中には、現在有効な「モード」が示されます。  モードについて
     は、次の節で説明します。

  -  () の次にあるのは、バッファ名です。これは、エディタが自動的に与え、
     普通は、ファイル名から取られます。

  -  「ファイル：」の後に書かれているのが、現在編集中のファイルの名前
     です。

  -  最後に、このファイル中のテキストがどのようなコードで書かれている
     かが示されます。

>>  モード・ラインを調べて、上で述べた各々の項目を確認しなさい。


モード
------

　かっこの中に並んでいるのは、現在のバッファに関する「モード」です。モー
ドは、いろいろな言語（Ｃや文書など）を編集するのに用いられます。今、こ
のバッファには何のモードも設定されていません。これはつまり、エディタが、
一切余計なことをしないということです。バッファやモードについてのより詳
しい情報は、^X^B とタイプすることによって得ることができます。これらに
ついてのより詳しい議論は、のマニュアルを参照して下さい。

　エディタのバッファの使い方に親しんでくると、「モード」はもっと違った
意味を持ってきます。二つ以上のバッファを使っている場合、モードには「ロー
カル」と「グローバル」のふた通りの意味があります。これは、そのモードが
現在のバッファや、他の（これから追加されるものを含む）バッファにどのよ
うに影響するかを示しています。

「ローカル」モードは、現在のバッファでのみ有効です。他のバッファや、こ
れから追加されるバッファには、一切影響を与えません。

ローカルモードの追加・削除を行うコマンドは、

     ^XM       ローカルモードの追加
     ^X^M      ローカルモードの削除

の二つです。これらのコマンドはいずれもモードを聞いてきます。これに対し
て、モードの名前（有効なモードの名前については、マニュアルを参照）をタ
イプし、さらに <Return>（改行キー）を入力すると、そのモードが追加（削
除）されます。

>>  ^XM WRAP とタイプしてみなさい。モードラインはどう変わりましたか。
    カーソルを空白行に移動させて、適当な文字列を入力していってみて下さ
    い。右マージンで何が起こりましたか？

　このように、WRAP モードで文書を入力することができます。このときエディ
タは、行が長すぎるときに、それを適当な部分で折り返してくれます。なお、
行の折り返しは、全角文字同士の間か、半角の空白、タブの位置で行われます。
このとき、簡単な禁則処理も行います。

　右マージンは普通７２桁目にセットされていますが、変更することも可能で
す（ニュースやメイルなどを書くときには、もっと小さめの値がよいでしょう）。
マージンを変更するには、ESC nn ^XF とタイプします。nn は、設定する桁で
す。

>>  ESC 40 ^XF とタイプしてみなさい。それから、何か適当に文字列を入力
    しなさい。今度はどこで行が折り返されましたか？マージンを元に戻すに
    は、ESC 72 ^XF をタイプします。

>>  ^X^M WRAP とタイプして、ローカルモード WRAP を「消し」なさい。

　「グローバル」モードは、これから追加されるバッファにのみ影響します。
現在既に存在しているバッファには影響を与えません。今は、グローバルモー
ドには何もセットされていません。

　グローバルモードの追加・削除には

     ESC-M     グローバルモードの追加
     ESC-^M    グローバルモードの削除

を使います。

注意：　グローバルモードはまったく使わなくても構いません。しかし、ほと
	んどすべてのバッファで使うようなモードは、グローバルモードとし
	て初めにセットしておいた方が便利でしょう。

　コマンドの使い方はローカルモードの場合と同様です。

>>  ECS-M OVER とタイプしなさい。このモードでは、エディタは、入力され
    た文字をバッファに挿入する代わりに、その場所の文字の「上に」書くよ
    うになります。モードラインは何か変化しましたか？カーソルを先ほど入
    力したテキストの上に移動し、適当に入力してみなさい。エディタは何か
    これまでと違ったことをしていますか？グローバルモードは新しく追加さ
    れるバッファにしか影響しないのです。

>>  ESC-^M OVER とタイプして、グローバルモード OVER を「消し」なさい。


挿入と削除
----------

　テキストをタイプしたければ、単にそれをタイプすればよろしい。目に見え
る文字（'A','7','*','あ' など）はエディタによってテキストであるとみな
され、そのまま挿入されます。行の終わりは改行文字で表され、これを入力す
るには <Return> をタイプします。

　直前に入力した文字を削除するには、<Delete> または ^H を入力します。
キーボードによっては、^H を入力するための専用のキーを持っているものも
あります。そのようなキーには、「←」、「BackSpace」、「BS」などと書い
てあるでしょう。<Delete> は、キーボードで「Delete」と書いてあるキーを
押して入力します。「Delete」のかわりに「Rubout」と書いてあるかも知れま
せん。より一般的には、<Delete> は、現在カーソルのある位置の直前の文字
を削除します。

>>  文字をいくつかタイプし、それからそれらを <Delete> を使って削除しな
さい。

>>  右マージンを越えるまでテキストをタイプしなさい。テキストが一行の幅
    以上に長くなると、その行は画面からはみ出して「継続」されます。右端
    にあるドル記号は、その行が継続されていることを表しています。エディ
    タは、現在編集中の位置が見えるように行をスクロールします。画面の右
    あるいは左の端にあるドル記号は、その方向に行がまだ続いていることを
    表しています。

　これは、文章で説明するより実際にやった方がよく判るでしょう。

>>  次の行は、画面からはみ出しています。ESC-F を何回も入力して、この行
    の右端の方に移動してみなさい。この行には、かなり長いテキストが書かれています。画面の両端にドル記号がありますね。ECS-F を続けて入力して、エディタがどこで行をスクロールするかみてみなさい。また、ESC-B を、エディタが行を逆にスクロールするまで入力してみなさい。

>>  先ほど入力した、継続された行に行き、^D でテキストを削除して、テキ
    ストが一行に収まるようにしてみなさい。継続を表すドル記号は消えまし
    たね。

>>  カーソルを行の先頭に移動し、<Delete> を入力しなさい。これはその行
    の直前の行句切りを削除するので、その行が前の行とつながってしまいま
    す。つながった行が画面の幅より長くなると、継続の表示がされるでしょ
    う。

>>  <Return> を押して、もう一度行句切りを挿入しなさい。

　内部的には、エディタはほとんどどんな長さの行でもメモリの許す限り扱え
るようになっています。ただし、ファイルとの入出力を行う場合には、一行の
長さは２５５文字を越えることはできません。

　エディタのほとんどのコマンドは、繰り返しの回数を与えることができます。
このことは、文字の挿入についても当てはまります。

>>  ESC-8 * と入力してみなさい。どうなりましたか。

　二つの行の間に空白行を作りたい場合には、二番目の行の先頭に行き、^O
を入力します。

>>  行の先頭に行き、そこで ^O を入力してみなさい。

　これで、エディタで、テキストを入力し、また間違いを修正するもっとも基
本的な方法を学んだことになります。文字と同じ様に、単語や行も削除するこ
とができます。削除操作について要約すると次のようになります。

     <Delete>      カーソルの直前の文字を削除
     ^H            <Delete> と同じ
     ^D            カーソルのある文字を削除

     ESC-<Delete>  カーソルの直前の単語を削除
     ESC-^H        ESC-<Delete> と同じ
     ESC-D         カーソル位置以降にある単語を削除

     ^K            カーソル位置から行末までを削除

　<Delete> や ^D は、^F と同じ様な方法でその適用範囲を拡大します（ただ
し、<Delete> は実際にはコントロール文字ではありませんし、^H の場合、そ
の拡張版が ESC-H でないなど厳密にいうと異なる面もありますが、あまり気
にしないように）。

　何かを削除した後で、それを元に戻したくなることがあります。エディタは、
一文字よりも大きい単位で削除を行った時には、削除した内容を保存しておき
ます。元に戻すには、^Y を使います。注意したいのは、^Y を、削除を行った
場所だけで行う必要はどこにもないということです。^Y は、保存されたテキ
ストを、現在カーソルのある場所に挿入するためのコマンドですから、これを
使って、テキストの移動を行うことができます。削除を行うコマンドには、
"Delete" コマンドと、"Kill" コマンドとがあります。"Kill" コマンドでは
削除されたものは保存されますが、"Delete" コマンドでは保存されません。
ただし、繰り返し回数が与えられると、保存されます。

>>  ^N を２回ほどタイプして、画面の適当な場所に移動しなさい。そして、
    ^K で、その行を削除しなさい。

　一回目の ^K でその行の内容が削除され、もう一度 ^K を入力すると、その
行自身が削除されます。もし、^K に繰り返し回数を指定した場合には、その
回数だけの行が（内容と行自身とが同時に）削除されます。

　今削除されたテキストは、保存されているので、それを取り出すことができ
ます。そのためには、^Y をタイプします。

>>  試してみなさい。

　^K を何度も続けて行うと、削除されるテキストはまとめて保存され、^Y で、
その全てが取り出されます。

>>  ^K を何度もタイプしてみなさい。

>>  テキストを取り出すには、^Y です。カーソルを数行下に移動させ、もう
    一度 ^Y をタイプしてみなさい。これでテキストのコピーができるわけで
    す。

　現在なにかのテキストが保存されていて、さらに他のテキストを削除すると
どうなるでしょうか。^Y は、もっとも最近削除されたものを取り出します。

>>  行を削除し、カーソルを移動させ、別の行を削除しなさい。^Y を行うと、
    ２番目の行が得られますね。

探索
----

　特定の文字列を、ファイルを前向きあるいは後向きに、探すことができます。

>>  ^S で探索が始まります。「カーソル」という単語を入力し、ESC をタイ
    プします（システムによっては、^S が使えない場合があります。その場
    合には、それに代わるキーがあるはずですから、だれかに聞いてみて下さ
    い）。

>>  ^S ESC とタイプすると、その次に出て来る「カーソル」が見つけられま
    す。

　^S は、現在のカーソル位置*以降*に出て来る探索文字列を探します。もし、
現在位置以前にある文字列を探したい場合にはどうするのでしょうか。そのた
めには、^R をタイプして、逆方向探索を行います。^R は、探索の方向が ^S 
と逆なのを除いて、^S と同様に働きます。


テキストの置換
--------------

>>  カーソルをこの行の２行下にある空白行に移動しなさい。それから、
ESC-R 置き換えら ESC 置換さ ESC とタイプしてみなさい。

    この行がどの様に置き換えられるかに注意しなさい。ファイル中でカーソ
    ル以降にある「置き換えら」という単語が、全部「置換さ」に置き換えら
    れたのです。全ての置き換えが終るか、あるいはファイルの終わりに到達
    すると、コミュニケーション・ラインに、置換された文字列の個数が表示
    されます。

　置換に際してより柔軟な処理を行いたい場合には、対話的なコマンドである、
query-replcace-search (ESC-^R) を使います。基本的に、このコマンドは、
置換される文字列が見つかる毎にそれを表示し、置換を行うかどうかを聞いて
きます。このとき "?" をタイプすれば、そのときに入力できるオプションが
表示されます。詳しくは、マニュアルを参照して下さい。


ファイル
--------

　テキストへの変更を永久的にするためには、それをファイルに保存しなけれ
ばなりません。保存されないと、ほどこした変更は、エディタを終了すると同
時に失われてしまいます。修正や削除、挿入などの変更は、ファイルの一時的
なコピーに対して行われ、ファイルの本体には影響を与えません。そのため、
最終的に、行った変更を固定するのか、無視するのかを決定することになりま
す。

注意：ファイル名は、モードラインに表示されています。

=* 日本語 uEMACS 2.1 () == emacs.tut  File: emacs.tut ==JIS-OLD=ROMAJI==========
                                      ---------------

　ファイルを取り出したり（Finding）、保存したり（Saving）するコマンド
は、これまでのものとは違い、２つの文字からなっています。^X に続いて入
力する文字が、ファイルに対して行う操作を表します。

　ファイルを取り出すには、^X^F と入力します。すると、コミュニケーショ
ン・ラインを使って、ファイルの名前が要求されます。答えるには、ファイル
の名前に続いて、改行を入れます。これによって、そのファイルが見つけられ、
エディタ内に取り込まれます。そしてその内容が画面に表示され、編集が行え
るようになります。

　ファイルに対して行われた変更を保存するには、^X^S と入力します。これ
によって、それまで行われた変更を反映した新しいファイルが作られます。保
存が終了すると、作られたファイルの行数が、コミュニケーション・ラインに
表示されます。

　もしファイルを編集していて、ある時点で保存せずに終了（^X^C）しようと
すると、エディタは、変更が行われているということを報告し、それでも終了
するかどうかを聞いてきます。"N" と入れればエディタに戻り、"Y" と入れる
と、保存を行わずにエディタを終了します。

　ファイルを新しく作成するには、そのファイルがすでにあるのと同じ様にし
て編集を行います。内容を保存する時点で、実際にファイルが作成されます。
それ以降は、既存のファイルを編集するのと何の変わりもありません。

　ファイルの編集を試しながら、同時にこの入門編を続けて行くのは少し難し
いかも知れません。しかし、いつでも、最初から始めて途中を飛ばすことで、
戻ってこられるのですから、安心です。というわけで、準備ができたと思った
ら、"FOO" という名前のファイルを編集し、なにかテキストを入力して、保存
します。そして、エディタを抜け、ファイルの内容を調べて、うまく行ってい
ることを確認して下さい。


コマンドの拡張
--------------

　エディタには、コントロール・キーやメタ・キーで入力できるものよりもずっ
と多くのコマンドがあります。これらを扱うために、拡張（eXtend）されたコ
マンドを行います。それには、以下の２つの種類があります。

     ^X       文字による拡張。続けて一文字を入力します。
     ESC-X    名前による拡張。続けてコマンドの名前を入力します。

　これらは一般に、便利だけれども、これまで見てきたものほど頻繁には用い
られないコマンドのためのものです。^X^F（ファイルの編集）や ^X^S（保存）
はこの仲間です。他に、^X^C（エディタの終了）もそうです。

　^X コマンドは、たくさんありますが、便利なのは以下のものでしょう：

     ^X^F   ファイルの編集（Find）
     ^X^S   ファイルの保存（Save）
     ^X^C   エディタを終了する。ファイルの保存は、自動的には行われませ
	     ん。しかし、もしファイルが変更されていれば、本当に終了し
	     たいのかどうかを聞いてきます。保存して終了する普通の方法
	     は、^X^S ^X^C とすることです。

　名前による拡張コマンドには、あまり使われないものや、特定のモードでし
か使わないものなどがあります。これらのコマンドは普通ファンクションと呼
ばれます。例として、"apropos" をとりあげます。このファンクションはキー
ワードを入力させ、それにマッチする全てのファンクションの名前を表示しま
す。ESC-X とタイプすると、コミュニケーション・ラインに ":" が表示され
ます。これに対して、実行するファンクションの名前（今の場合、"apropos"）
を入力します。"apr" まで入力した後スペースを入れれば、後の部分は自動的
に補われます。この後、キーワードを聞かれますから、知りたい文字列をタイ
プします。

>>  ESC-X をタイプし、続けて、"apropos<Return>" あるいは "apr<Space>" 
    と入力します。次に、"file" に続いて改行を入力します。
    備考：ESC-A は、ESC-X "apropos" と同じ働きをします。

>>  現れた「ウィンドウ」を消すには、^X0 とタイプします。


ファンクション・キー
--------------------

　　さねを注：
	　ファンクション・キーについては、特定のパーソナル・コンピュー
	タ上でしか使用できませんし、機種間の互換性もあまりありませんの
	で、省略します。


より詳しい情報を得るには
------------------------

　この入門編では、エディタを使い始めるのに十分なだけの情報を提供してい
ます。まだこの他にもたくさんの機能があり、それをこの場で述べることはと
ても不可能です。まだ知らない多くの機能について学ぶためには、どうしたら
よいでしょうか。

　もっとも基本的な方法は、describe-key コマンドを使うことです。^X? と
タイプし、それからコマンド・キーを入力します。すると、そのキーに割り当
てられたファンクションが、コミュニケーション・ラインに表示されます。

>>  ^X?^P とタイプしてみなさい。コミュニケーション・ラインには、
"previous-line" と表示されるはずです。

注意：複数文字のコマンド（^X^Z や ESC-V など）も、同じ様に ^X? のあと
      に入力できます。

###  describe-command は、現時点では使えません。-- December 1986  ###
###  次のセクションは飛ばして下さい。                             ###

　describe-command（ESC-?）は、ファンクションの名前を聞き、マニュアル
のそのコマンドの部分を表示します。読み終ったら、スペースまたは ^G（quit）
を入力すれば、元のテキストの画面に戻ります。

　previous-line コマンドについて、もっと詳しい説明を見てみましょう。

>>  ESC-?^P とタイプします。読み終ったら、スペースを入力します。

　「ファンクションの名前」は、エディタを専用化しようとする場合に重要に
なってきます。EMACS CHART には、コマンド文字の説明の部分に、これが出て
きます。


おわりに
--------

忘れずに： 終了するには、^X^C とします。

　この入門編は、まったくの初心者にもわかりやすいようにと意図しています。
ですから、もし何かわかりにくい点があったなら、一人で愚痴を言うのではな
く、文句をつけて下さい。

　もし、EMACS を何日かでも使ってみれば、それをやめてしまうことなどでき
なくなるでしょう。最初は戸惑うかも知れません。しかし、それはどんなエディ
タでも同様です。EMACS のように、非常に多くのことができる場合には特にそ
うでしょう。そして、EMACS では、実際、何でもできるのですから。


謝辞
----

　この文書は、Jonathan Payne による "JOVE Tutorial" (19 January 86) を
変更したものであり、それはもともとは、CCA-UNIX の Steve Zimmerman によっ
て変更された、MIT の "Teach-Emacs" 入門編 (31 October 85) を（さらに）
変更したものでした。

Update - February 1986 by Dana Hoggatt.

Update - December 1986 by Kim Leburg.

　この文書は、MicroEMACS 付属のチュートリアルを、さねをが個人の資格で
日本語に訳したものです。訳に際しては、逐語訳よりも、内容のわかりやすさ
を重視したつもりです。また、実状に合わない面などについては、修正したと
ころもあります。
　この文書の日本語訳に当たっては、誰の許可も得ていません。従って、もし
かすると、誰かに怒られるかも知れません。

Update/Translate - July 1987 by SANETO Takanori
